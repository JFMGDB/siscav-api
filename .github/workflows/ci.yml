name: CI Pipeline

# Aciona o workflow em pull requests para a branch develop
on:
  pull_request:
    branches:
      - develop

jobs:
  lint-and-test:
    name: Linting e Testes
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout do código
      - name: Checkout código
        uses: actions/checkout@v4

      # 2. Configurar Python
      - name: Configurar Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      # 3. Instalar dependências
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      # 4. Executar Linting com Ruff
      - name: Executar Ruff (Linting)
        run: |
          ruff check .
        continue-on-error: false

      # 5. Executar Verificação de Formatação com Ruff
      - name: Verificar Formatação (Ruff Format)
        run: |
          ruff format --check .
        continue-on-error: false

      # 6. Executar Testes Unitários com Pytest
      - name: Executar Testes (Pytest)
        run: |
          pytest -v --tb=short
        continue-on-error: false

      # 7. Gerar Relatório de Cobertura (opcional, mas recomendado)
      - name: Gerar Relatório de Cobertura
        run: |
          pytest --cov=apps --cov-report=term-missing --cov-report=xml
        continue-on-error: true

      # 8. Upload do relatório de cobertura (opcional)
      - name: Upload Relatório de Cobertura
        if: always()
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        continue-on-error: true
